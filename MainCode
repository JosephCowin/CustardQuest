
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CustardQuest
{
    class Program
    {
        public static void text(string input)
        {
            int wait = 0;       //cyan - inputs for the user, white - default, grey - values that can be directly changed, green - good alerts, red - bad alerts or dealt damage, yellow - neutral alerts and general highlighting
            bool playing = false;
            bool allLettersVoice = false;
            bool waitForSound = false;

            for (int i = 0; i < input.Length; i++)
            {
                if (input.Substring(i, 1) == "\\")
                {  //Text colour effects: c-cyan,g-grey,e-green,r-red,w-white,y-yellow,1-6 wait time, v-start/stop voice, b-alllettersvoice toggle, B-waitforsound to end toggle, \\/@"\"-\, \"-", £- newline, $ -clear
                    i++; //Use \\ or \ if using @ prior to quotes to have special effects
                    if (input.Substring(i, 1) == "c") { Console.ForegroundColor = ConsoleColor.Cyan; }
                    else if (input.Substring(i, 1) == "g") { Console.ForegroundColor = ConsoleColor.Gray; }
                    else if (input.Substring(i, 1) == "e") { Console.ForegroundColor = ConsoleColor.Green; }
                    else if (input.Substring(i, 1) == "r") { Console.ForegroundColor = ConsoleColor.Red; }
                    else if (input.Substring(i, 1) == "w") { Console.ForegroundColor = ConsoleColor.White; }
                    else if (input.Substring(i, 1) == "y") { Console.ForegroundColor = ConsoleColor.Yellow; }
                    else if (input.Substring(i, 1) == "1") { wait = 0; }
                    else if (input.Substring(i, 1) == "2") { wait = 100; }
                    else if (input.Substring(i, 1) == "3") { wait = 250; }
                    else if (input.Substring(i, 1) == "4") { wait = 500; }
                    else if (input.Substring(i, 1) == "5") { wait = 1000; }
                    else if (input.Substring(i, 1) == "6") { wait = 2000; }
                    else if (input.Substring(i, 1) == "v") { playing = !playing; }
                    else if (input.Substring(i, 1) == "b") { allLettersVoice = !allLettersVoice; }
                    else if (input.Substring(i, 1) == "B") { waitForSound = !waitForSound; }
                    else if (input.Substring(i, 1) == "\\") { Console.Write("\\"); }
                    else if (input.Substring(i, 1) == "!") { Console.Write("\""); }
                    else if (input.Substring(i, 1) == "£") { Console.WriteLine(); }
                    else if (input.Substring(i, 1) == "$") { Console.Clear(); }
                }
                else
                {
                    Console.Write(input.Substring(i, 1));


                    if (playing && ((Convert.ToChar(input.Substring(i, 1)) <= 'z' && Convert.ToChar(input.Substring(i, 1)) >= 'a') || (Convert.ToChar(input.Substring(i, 1)) <= 'Z' && Convert.ToChar(input.Substring(i, 1)) >= 'A')) && (allLettersVoice || Convert.ToChar(input.Substring(i, 1)) == 'u' || Convert.ToChar(input.Substring(i, 1)) == 'o' || (Convert.ToChar(input.Substring(i, 1)) == 'i' || Convert.ToChar(input.Substring(i, 1)) == 'e' || Convert.ToChar(input.Substring(i, 1)) == 'a')))
                    {
                        if (waitForSound)
                        {
                            // voice.PlaySync();
                        }
                        else
                        {
                            // voice.Play();
                        }
                    }
                }
                if (wait != 0)
                {
                    System.Threading.Thread.Sleep(wait);
                }
            }
            Console.WriteLine();
        }

        public static int Sections(string input, string seperator) //outputs the amount of sections in the string, seperated by the seperator, -1 (so minimum 0)
        {
            int found = 0;

            for (int i = 0; i < input.Length - (seperator.Length - 1); i++)
            {
                if (input.Substring(i, seperator.Length) == seperator)
                {
                    found++;
                    i += seperator.Length - 1;
                }
            }
            return found;
        }
        public static string selectSection(string input, string seperator, int section) //section ranges from 0 to the maximum section
        {
            string selected = input;
            int maxSect = Sections(input, seperator);
            int curSect = 0;
            while (curSect < section)
            {
                int i = 0;
                bool donesection = false;
                while (!donesection)
                {
                    if (selected.Substring(i, seperator.Length) == seperator)
                    {
                        selected = selected.Substring(i + seperator.Length);
                        donesection = true;
                    }
                    i++;
                }
                curSect++;
            }
            if (section < maxSect)
            {

                int i = 0;
                bool donesection = false;
                while (!donesection)
                {
                    if (selected.Substring(i, seperator.Length) == seperator)
                    {
                        selected = selected.Substring(0, i);
                        donesection = true;
                    }
                    i++;
                }
                curSect++;
            }

            return selected;
        }
        static void Main(string[] args)
        {
            bool Running = true;
            bool optJokey = false;
            bool optSound = true;
            int Menu = 0;
            Console.ForegroundColor = ConsoleColor.White;
            Console.CursorVisible = false;
            Console.WindowWidth = 150;
            Console.WindowHeight = 30;
            Console.WriteLine(@"▄████████ ███    █▄     ▄████████     ███        ▄████████    ▄████████ ████████▄       ████████▄   ███    █▄     ▄████████    ▄████████     ███     ");
            Console.WriteLine(@"███    ███ ███    ███   ███    ███ ▀█████████▄   ███    ███   ███    ███ ███   ▀███      ███    ███  ███    ███   ███    ███   ███    ███ ▀█████████▄");
            Console.WriteLine(@"███    █▀  ███    ███   ███    █▀     ▀███▀▀██   ███    ███   ███    ███ ███    ███      ███    ███  ███    ███   ███    █▀    ███    █▀     ▀███▀▀██");
            Console.WriteLine(@"███        ███    ███   ███            ███   ▀   ███    ███  ▄███▄▄▄▄██▀ ███    ███      ███    ███  ███    ███  ▄███▄▄▄       ███            ███   ▀");
            Console.WriteLine(@"███        ███    ███ ▀███████████     ███     ▀███████████ ▀▀███▀▀▀▀▀   ███    ███      ███    ███  ███    ███ ▀▀███▀▀▀     ▀███████████     ███    ");
            Console.WriteLine(@"███    █▄  ███    ███          ███     ███       ███    ███ ▀███████████ ███    ███      ███    ███  ███    ███   ███    █▄           ███     ███    ");
            Console.WriteLine(@"███    ███ ███    ███    ▄█    ███     ███       ███    ███   ███    ███ ███   ▄███      ███  ▀ ███  ███    ███   ███    ███    ▄█    ███     ███    ");
            Console.WriteLine(@"████████▀  ████████▀   ▄████████▀     ▄████▀     ███    █▀    ███    ███ ████████▀        ▀██████▀▄█ ████████▀    ██████████  ▄████████▀     ▄████▀  ");
            Console.WriteLine(@"                                                              ███    ███                                                                             ");
            Console.WriteLine("Press Enter To Start");
            Console.ReadLine();
            while (Running)
            {
                Console.Clear();
                if (Menu == 0)
                {
                    Console.CursorVisible = false;
                    Console.WindowWidth = 150;
                    Console.WindowHeight = 30;
                    Console.WriteLine(@"▄████████ ███    █▄     ▄████████     ███        ▄████████    ▄████████ ████████▄       ████████▄   ███    █▄     ▄████████    ▄████████     ███     ");
                    Console.WriteLine(@"███    ███ ███    ███   ███    ███ ▀█████████▄   ███    ███   ███    ███ ███   ▀███      ███    ███  ███    ███   ███    ███   ███    ███ ▀█████████▄");
                    Console.WriteLine(@"███    █▀  ███    ███   ███    █▀     ▀███▀▀██   ███    ███   ███    ███ ███    ███      ███    ███  ███    ███   ███    █▀    ███    █▀     ▀███▀▀██");
                    Console.WriteLine(@"███        ███    ███   ███            ███   ▀   ███    ███  ▄███▄▄▄▄██▀ ███    ███      ███    ███  ███    ███  ▄███▄▄▄       ███            ███   ▀");
                    Console.WriteLine(@"███        ███    ███ ▀███████████     ███     ▀███████████ ▀▀███▀▀▀▀▀   ███    ███      ███    ███  ███    ███ ▀▀███▀▀▀     ▀███████████     ███    ");
                    Console.WriteLine(@"███    █▄  ███    ███          ███     ███       ███    ███ ▀███████████ ███    ███      ███    ███  ███    ███   ███    █▄           ███     ███    ");
                    Console.WriteLine(@"███    ███ ███    ███    ▄█    ███     ███       ███    ███   ███    ███ ███   ▄███      ███  ▀ ███  ███    ███   ███    ███    ▄█    ███     ███    ");
                    Console.WriteLine(@"████████▀  ████████▀   ▄████████▀     ▄████▀     ███    █▀    ███    ███ ████████▀        ▀██████▀▄█ ████████▀    ██████████  ▄████████▀     ▄████▀  ");
                    Console.WriteLine(@"                                                              ███    ███                                                                             ");

                    text("\\cP\\wlay");      //Need to underline / bold first char (Make this input) -j
                    text("\\cO\\wptions");
                    text("\\cC\\wredits");
                    text("\\cE\\wxit");      


                    char input = Console.ReadKey().KeyChar;

                    if (input == 'p')           
                    {
                        Menu = 1;
                    }

                    else if (input == 'o')      
                    {
                        Menu = 2;
                    }

                    else if (input == 'c')

                    {
                        Menu = 3;
                    }

                    else if (input == 'e')
                    {
                        Running = false;
                    }
                }


                else if (Menu == 1)     //Play - Lead to Char creation and Game Setup - j
                {

                }
                else if (Menu == 2)     //Options need to include Sound, Colourblind, Easter eggs - j
                {
                    text("Jokes - \\cj\\w - \\g" + optJokey + "\\£\\wSound - \\cs\\w - \\g" + optSound + "\\£\\wReturn to main menu - \\cm\\w");
                    char input = Console.ReadKey().KeyChar;
                    if (input == 'j')           
                    {
                        optJokey = !optJokey;
                    }
                    
                    else if (input == 's')      
                    {
                        optSound = !optSound;
                    }
                    
                    else if (input == 'm')      
                    {
                        Menu = 0;
                    }
                }
                else if (Menu == 3)     //Credits
                {
                    text("CREDITS\\£Code - Orry\\£Graphics - Orry\\£3D Rendering - Joey\\£Complaints Department - Joey\\£Credits - Orry\\£Ideas - Orry and a sprinkle of Joey\\£Typos - The wo of us");
                    Console.ReadKey();
                    Menu = 0;
                }


            }

            


        }
    }
}
